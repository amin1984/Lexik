<?php

namespace Satisfactory\OperationBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;
use Satisfactory\SettingBundle\Entity\AppParam;

/**
 * EnterCorrespondenceRepository
 *
 * This class was generated by the ODM. Add your own custom
 * repository methods below.
 */
class EnterCorrespondenceRepository extends DocumentRepository
{
  /**
     * @param Correspondence id $correspondenceId 
     *
     * @return array
     */
    public function findByCorrespondence($correspondenceId) 
    {
        $qb = $this->createQueryBuilder()
                ->field('correspondenceId')
                ->equals($correspondenceId);
        
        return $qb->getQuery()->execute();
    }  
    
    /**
     * @param Correspondence id $correspondenceId 
     *
     * @return array
     */
    public function findBySearch($id, $input, $output) 
    { 
        $qb = $this->createQueryBuilder()
                ->field('correspondenceId')
                ->equals($id);
        
        $data = $qb->getQuery()->execute();
        
        $result = array();
        
        foreach ($data as $value)
        {
            foreach($value->getInput() as $key => $val)
            {
                if($val == $input)
                {
                  $result[$key] = $value; 
                  return $result;
                }
                   
            }
            foreach($value->getOutput() as $key => $val)
            {
                if($val == $output)
                {
                  $result[$key] = $value; 
                  return $result;
                }
            }
        }
        //die(print_r($result));
    }  
    
  /**
     * @param Correspondence id $correspondenceId 
     *
     * @return array
     */
    public function findCountByCorrespondence($correspondenceId, $correspondanceName = NULL) 
    {
//        $countQuery = $this
//            ->createQueryBuilder()
//            ->requireIndexes(false)
//            ;
//
//        $countQuery->field('correspondenceId')->equals($correspondenceId);
//
//        $count = $countQuery->count()->getQuery()->execute();
        
        global $kernel;
        $kernel->getContainer();
        $m = $kernel->getContainer()->get('doctrine_mongodb.odm.default_connection');
        // select a database
        $db = $m->selectDatabase('satisfactory');

        // select a collection (analogous to a relational database's table)
        $collection = $db->selectCollection('TDC_'.$correspondenceId);
        if($correspondenceId == $kernel->getContainer()->getParameter('IdCorrespondanceParam')) {
            $collection = $db->selectCollection($correspondanceName);
        }
        
        return $collection->count();
    }
    
    
    public function getPaginatedResults($limit, $offset = 0,$correspondenceId, $hydrate = true)
    {
        $qb = $this->createQueryBuilder('EnterCorrespondence');
        $qb->field('correspondenceId')->equals($correspondenceId);
        $qb
                ->skip($offset)
                ->limit($limit)
                ->hydrate($hydrate)
                ;
        
        return $qb->getQuery()->execute();
    }
}
